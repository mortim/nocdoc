load seq
load fs
load str
load sys
load seq
load std:fs
load std:string
load std:stack
load std:bool

def replaceAllNewLinesByBr = {
    dup
    [
        [[[]] [pop]]
        [[_] [
            popr
            dup
            [quote 3 -1 rotNM cat swap replaceAllNewLinesByBr]
            [pop ['<' 'b' 'r' '>'] 3 -1 rotNM cat swap replaceAllNewLinesByBr]
            3 -1 rotNM '\n' == if
        ]]
    ] case
}

def htmlFunctions = {
    "" [dup dup str swap str 3 -1 rotNM help $ [] swap replaceAllNewLinesByBr tostr "<div id=\"" 3 -1 rotNM cat "\">" cat 3 -1 rotNM "<h3>" swap cat "</h3>" cat cat swap cat "</div><br><br><br>" cat cat] fold
}

def nameFunctions = {
    "" [str dup "<li><a href=\"#" swap cat "\">" cat swap cat "</a></li>" cat cat] fold
}

def removeFileNameExtension = {
    $ popr pop popr pop popr pop popr pop popr pop tostr
}

def header = {
    "" [
    dup "<li><a href=\"" swap cat "\">" cat swap removeFileNameExtension cat "</a></li>" cat
    cat] fold
}

def html = {
    5 1 rotNM

    quote swap quote swap 3 -1 rotNM quote 3 1 rotNM 
    
    4 -1 rotNM quote 4 1 rotNM

    5 -1 rotNM quote 5 1 rotNM

    cat cat cat cat

    "<!DOCTYPE html>
<html>
<head>
    <meta charset=\"UTF-8\" />
    <title>Noc documentation</title>
    <link href=\"https://fonts.googleapis.com/css2?family=Ubuntu&display=swap\">
    <style>
        * {
            padding: 0;
            font-family: 'Ubuntu', sans-serif;
            font-weight: 400;
        }

        li {
            list-style: none;
            padding-top: 7px;
        }

        li a {
            text-decoration: none;

        }

        li a:hover {
            color: grey;
        }

        #table-of-contents {
            border: 1px solid lightgrey;
            margin-top: -1px;
        }

        #docs {
            padding-left: 20px;
            width: 100%;
        }

        #docs div {
            border: 1px solid lightgrey;
            padding-left: 10px;
            padding-bottom: 15px;
            background-color: #efe9e9;
        }

        #top-btn {
            position: fixed;
            left: 90%;
            top: 80%;
            background-color: #008CBA;
            padding: 15px;
            color: #fff;
            text-decoration: none;
        }

        h6 {
            color: grey;
        }

        #sidebar2 {
            border: 1px solid lightgrey;
        }

        #sidebar ul {
            padding: 10px;
        }

        #container {
            display:flex;
        }
    </style>
</head>
<body>
    <h6 id=\"start-of-page\">Documentation powered by the <a href=\"https://github.com/mortim/noc\">Noc Programming Language</a></h1>
    <h2>{} : {}</h2>
    <div>
        <a id=\"top-btn\" href=\"#start-of-page\">Top</a>

        <div id=\"container\">

            <div id=\"sidebar\">
                <ul id=\"table-of-contents\">
                <h3 class=\"section-title\">Table of contents</h6>
                {}
                </ul>

                <ul id=\"sidebar2\">
                {}
                </ul>
            </div>
            
            <div id=\"docs\"> 
            {}
            </div>
        </div>
    </div>
</body>
</html>
    " swap format
}

def generateModule = {
    3 -1 rotNM unquote
    5 -1 rotNM pop
    4 -1 rotNM pop
    3 -1 rotNM pop
    swap pop

    header

    swap dup ".html" cat
    4 1 rotNM

    # Output all docstring functions
    3 -1 rotNM dup htmlFunctions

    swap nameFunctions "<h3 class=\"section-title\">Functions</h3>" swap cat swap 

    4 -1 rotNM
    3 1 rotNM 

    # type of page printed in the html
    "module"

    html write
}

def generateHomePage = {
    unquote

    header
    
    5 -1 rotNM dup 
    ".html" cat swap
    6 2 rotNM

    4 1 rotNM

    3 -1 rotNM swap

    dup quote swap quote
    3 -1 rotNM quote 3 1 rotNM 

    cat cat

    "<h3 class=\"section-title\">Details</h3><li><b>Author:</b> {}</li><li><b>Git repos: </b><a href=\"{}\">{}</a></li>" swap

    format swap

    # type of page printed in the html
    "library"

    html write
}
