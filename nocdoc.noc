load seq
load str
load std:fs
load std:string
load std:stack
load nocdoc/include/utils.noc
load nocdoc/include/constants.noc

def formatHTML = {
    ---
    source: <a href="https://github.com/noc-lang/nocdoc/blob/main/nocdoc.noc#L9">github.com/noc-lang/nocdoc/nocdoc.noc#formatHTML</a>

    Format some website blocks in HTML

    Syntax: [const] formatHTML => "html_content"
        consts:
            - <a href="constants.html#[TABLE_OF_CONTENTS_SIDEBAR]">TABLE_OF_CONTENTS_SIDEBAR</a>
            - <a href="constants.html#[TABLE_OF_CONTENTS_LINKS]">TABLE_OF_CONTENTS_LINKS</a>
            - <a href="constants.html#[DETAILS_SIDEBAR]">DETAILS_SIDEBAR</a>
            - <a href="constants.html#[FUNCTIONS_SIDEBAR]">FUNCTIONS_SIDEBAR</a>
            - <a href="constants.html#[NOC_FUNCTIONS_DOCUMENTATION]">NOC_FUNCTIONS_DOCUMENTATION</a>
            - <a href="constants.html#[PAGE]">PAGE</a>
    ---

    [
        [[TABLE_OF_CONTENTS_SIDEBAR] [
                    # example => table_of_contents : [["section1" ["link1.html" "link2.html"]] ["section2" ["link3.html" "link4.html"]]]
                    #   -> first iteration: "acc" ["section1" ["link1.html" "link2.html"]]

                    "" [ # "acc" "section1" ["link1.html" "link2.html"]
                         unquote
                         # "acc" "section1" ["table_of_contents_html"]
                         TABLE_OF_CONTENTS_LINKS formatHTML quote
                         # "acc" ["section1" "table_of_contents_html"]
                         quoteTwoElems
                         # "acc" "<li>section1<ul>table_of_contents_html</ul></li>"
                         "<li>{}<ul>{}</ul></li>" swap format
                         # "acc<li>section1<ul>table_of_contents_html</ul></li>"
                         cat
                       ] fold
        ]]

        [[TABLE_OF_CONTENTS_LINKS] [
                # example => links: ["link1.html" "link2.html"]
                #   -> first iteration: "acc" "link1.html"

                "" [ # "acc" "link1.html" "link1.html"
                     dup
                     # "acc" "link1.html" ["link1"]
                     $ 5 removeNChars tostr quote
                     # "acc" ["link.html" "link1"]
                     quoteTwoElems
                     # "acc" "<li><a href=\"link.html\">link1</a></li>"
                     "<li><a href=\"{}\">{}</a></li>" swap format
                     # "acc<li><a href=\"link1.html\">link1</a></li>"
                     cat
                ] fold

        ]]

        [[DETAILS_SIDEBAR] ["<h3 class=\"section-title\">Details</h3><li><b>Author:</b> {}</li><li><b>Git repos: </b><a href=\"{}\">{}</a></li>" swap format]]

        [[NOC_FUNCTIONS_DOCUMENTATION] [
            # example => functions : [[func_a] [func_b]]
            #   -> first iteration: "acc" [func_a]

            "" [ # "acc" "[func_a]" "[func_a]" "func_a_doc"
                dup dup str swap str 3 -1 rotNM help
                # "acc" "[func_a]" "[func_a]" ["func_a_doc_with_br_tags"]
                $ [] swap replaceNewlines tostr quote
                # "acc" ["[func_a]" "[func_a]" "func_a_doc_with_br_tags"]
                quoteTwoElems quoteTwoElems
                # "acc" "<div id=\"#[func_a]\"><h3>[func_a]</h3>func_a_doc_with_br_tags</div>"
                "<div id=\"{}\"><h3>{}</h3>{}</div><br><br>" swap format
                # "acc<div id=\"#[func_a]\"><h3>[func_a]</h3>func_a_doc_with_br_tags</div>"
                cat
            ] fold

        ]]

        [[FUNCTIONS_SIDEBAR] [
            # example => functions : [[func_a] [func_b]]
            #   -> first iteration: "acc" [func_a]

            "" [ # "acc" "[func_a]" ["[func_a]"]
                 str dup quote
                 # "acc" ["[func_a]" "[func_a]"]
                 quoteTwoElems
                 # "acc" "<li><a href=\"#[func_a]\">[func_a]</a></li>"
                 "<li><a href=\"#{}\">{}</a></li>" swap format
                 # "acc<li><a href=\"#[func_a]\">[func_a]</a></li>"
                 cat
                ] fold 

            "<h3 class=\"section-title\">Functions</h3>" swap cat

        ]]

        [[PAGE] [ # ["page_type" "name_page" "table_of_contents_html" "sidebar2_html" "content"]
                  quote quoteTwoElems quoteTwoElems quoteTwoElems quoteTwoElems 
                  # "html_content"
                  "nocdoc/template.html" read swap format
        ]]

    ] case
}

def renderHomePage = {
    ---
    source: <a href="https://github.com/noc-lang/nocdoc/blob/main/nocdoc.noc#L108">github.com/noc-lang/nocdoc/nocdoc.noc#renderHomePage</a>

    Render the homepage in HTML format string

    Syntax: info renderHomePage => "name.html" "html_content"
        info -> ["name" "author" [desc] "url_git" table_of_contents]
    ---

    # "name" "author" [desc] "url_git" table_of_contents
    unquote

    # "name" "author" [desc] "url_git" "table_of_contents_html"
    TABLE_OF_CONTENTS_SIDEBAR formatHTML

    # "author" [desc] "url_git" "table_of_contents_html" "name" "name"
    5 -1 rotNM dup

    # "author" [desc] "url_git" "table_of_contents_html" "name.html" "name"
    ".html" cat swap 

    # "name.html" "name" "author" [desc] "url_git" "table_of_contents_html"
    6 2 rotNM 

    # "name.html" "name" "table_of_contents_html" "author" [desc] "url_git" 
    4 1 rotNM

    # "name.html" "name" "table_of_contents_html" [desc] "author" "url_git" ["url_git"]
    3 -1 rotNM swap dup quote

    # "name.html" "name" "table_of_contents_html" [desc] ["author" "url_git" "url_git"]
    quoteTwoElems quoteTwoElems

    # "name.html" "name" "table_of_contents_html" [desc] "sidebar2_html" 
    DETAILS_SIDEBAR formatHTML

    # "name.html" "name" "table_of_contents_html" "sidebar2_html" "desc"
    swap unquote

    # "name.html" "table_of_contents_html" "sidebar2_html" "desc" "library : name" "library : name"
    4 -1 rotNM "homepage : " swap cat dup

    # "name.html" "library : name" "library : name" "table_of_contents_html" "sidebar2_html" "desc"
    5 2 rotNM

    # "name.html" "html_content"
    PAGE formatHTML
}

def renderModule = {
    ---
    source: <a href="https://github.com/noc-lang/nocdoc/blob/main/nocdoc.noc#L157">github.com/noc-lang/nocdoc/nocdoc.noc#renderModule</a>

    Render the Noc module in HTML format string

    Syntax: info functions "module_name" renderModule => "module_name.html" "html_content"
        info -> ["name" "author" [desc] "url_git" table_of_contents]
        functions -> [[func_a] [func_b] ...]
    ---

    # functions "module_name" "name" "author" [desc] "url_git" table_of_contents
    3 -1 rotNM unquote

    # functions "module_name" "table_of_contents_html"
    TABLE_OF_CONTENTS_SIDEBAR formatHTML

    # functions "module_name" "table_of_contents_html"
    swap pop
    swap pop
    swap pop
    swap pop

    # "module_name" "table_of_contents_html" functions functions
    3 -1 rotNM dup

    # "module_name" "table_of_contents_html" functions "functions_html"
    NOC_FUNCTIONS_DOCUMENTATION formatHTML

    # "module_name" "table_of_contents_html" "functions_sidebar" "functions_html" 
    swap FUNCTIONS_SIDEBAR formatHTML swap

    # "module_name.html" "module_name" table_of_contents_html" "functions_sidebar" "functions_html" 
    4 -1 rotNM dup ".html" cat swap 5 2 rotNM

    # "module_name.html" table_of_contents_html" "functions_sidebar" "functions_html" "module : module_name" "module : module_name"
    4 -1 rotNM "module : " swap cat dup

    # "module_name.html" "module : module_name" "module : module_name" table_of_contents_html" "functions_sidebar" "functions_html"
    5 2 rotNM 

    # "module_name.html" "html_content"
    PAGE formatHTML
}

def renderWikiPage = {
    ---
    source: <a href="https://github.com/noc-lang/nocdoc/blob/main/nocdoc.noc#L201">github.com/noc-lang/nocdoc/nocdoc.noc#renderWikiPage</a>

    Render the Noc wiki in HTML format string

    Syntax: wikiInfo wikiPage "wiki_page_name" renderModule => "wiki_page_name.html" "html_content"
        wikiInfo -> ["name" "author" "desc" "url_git" table_of_contents]
        wikiPage -> content page in HTML
    ---

    # wikiPage "wiki_page_name" "name" "author" "desc" "url_git" table_of_contents
    3 -1 rotNM unquote

    # wikiPage "wiki_page_name" "name" "author" "url_git" table_of_contents
    3 -1 rotNM pop

    # wikiPage "wiki_page_name" "name" "author" "url_git" "table_of_contents_html"
    TABLE_OF_CONTENTS_SIDEBAR formatHTML

    # wikiPage "wiki_page_name" "name" "table_of_contents_html" "author" "url_git" ["url_git"] 
    3 1 rotNM dup quote

    # wikiPage "wiki_page_name" "name" "table_of_contents_html" ["author" "url_git" "url_git"]
    quoteTwoElems quoteTwoElems

    # wikiPage "wiki_page_name" "name" "table_of_contents_html" "sidebar2_html"
    DETAILS_SIDEBAR formatHTML

    # wikiPage "wiki_page_name" "table_of_contents_html" "sidebar2_html"
    3 -1 rotNM pop

    # "wiki_page_name.html" wikiPage "table_of_contents_html" "sidebar2_html" "wiki_page_name" 
    3 -1 rotNM dup ".html" cat 5 1 rotNM

    # "wiki_page_name.html" wikiPage "table_of_contents_html" "sidebar2_html" "library : wiki_page_name" "library : wiki_page_name"
    "wiki : " swap cat dup

    # "wiki_page_name.html" wikiPage "library : wiki_page_name" "library : wiki_page_name" "table_of_contents_html" "sidebar2_html"
    4 2 rotNM 

    # "wiki_page_name.html" "library : wiki_page_name" "library : wiki_page_name" "table_of_contents_html" "sidebar2_html" wikiPage
    5 -1 rotNM

    # "wiki_page_name.html" "html_content"
    PAGE formatHTML
}

def generateHomePage = {
    ---
    source: <a href="https://github.com/noc-lang/nocdoc/blob/main/nocdoc.noc#L248">github.com/noc-lang/nocdoc/nocdoc.noc#generateHomePage</a>

    Generate the homepage file in HTML format.

    Syntax: info generateHomePage => ()
        info -> ["name" "author" [desc] "url_git" table_of_contents]
    ---
    renderHomePage write
}


def generateModule = {
    ---
    source: <a href="https://github.com/noc-lang/nocdoc/blob/main/nocdoc.noc#L260">github.com/noc-lang/nocdoc/nocdoc.noc#generateModule</a>

    Generate a Noc module file in HTML format

    Syntax: info functions "module_name" generateModule => ()
        info -> ["name" "author" [desc] "url_git" table_of_contents]
        functions -> [[func_a] [func_b] ...]
    ---
    renderModule write
}

def generateWikiPage = {
    ---
    source: <a href="https://github.com/noc-lang/nocdoc/blob/main/nocdoc.noc#272">github.com/noc-lang/nocdoc/nocdoc.noc#generateWikiPage</a>

    Generate a Noc wiki in HTML format

    Syntax: wikiInfo wikiPage "wiki_page_name" generateWikiPage => ()
        wikiInfo -> ["name" "author" "desc" "url_git" table_of_contents]
        wikiPage -> content page in HTML
    ---
    renderWikiPage write
}